package com.zyf.autoconfigure;

import com.zyf.entity.School;
import com.zyf.entity.Student;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.boot.context.properties.EnableConfigurationProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.util.StringUtils;

import java.util.ArrayList;
import java.util.List;

/**
 * @author zyfds
 * @description: TODO
 * @date 2021/5/7 22:23
 */
@Slf4j
@Configuration
@ConditionalOnClass(School.class)
@EnableConfigurationProperties(SchoolProperties.class)
public class SchoolAutoConfiguration {

    @Autowired
    private SchoolProperties schoolProperties;

    @Bean
    @ConditionalOnMissingBean(School.class)
    @ConditionalOnProperty(name = "school.enabled", havingValue = "true", matchIfMissing = true)
    public School school(){
        School school = new School();
        List<Student> students = new ArrayList<>();
        if(schoolProperties.getStudentsNames()!=null){
            for (String name : schoolProperties.getStudentsNames()) {
                students.add(new Student(name));
            }
        }else{
            students.add(new Student("Fred"));
            students.add(new Student("Frank"));
        }
        school.setStudents(students);
        if(StringUtils.hasText(schoolProperties.getName()))school.setName(schoolProperties.getName());
        else school.setName("School Generated By AutoConfigure");
        log.info("generated by autoconfigure  "+school.toString());
        return school;
    }
}
